# Further reading: https://www.raspberrypi.org/documentation/hardware/camera/README.md

# Set these as fleet configuration variables in balena.io dashboard only (won't be read by app directly):
# RESIN_HOST_CONFIG_gpu_mem=128
# RESIN_HOST_CONFIG_start_x=1

# TODO: Consider moving these to user preferences, environment variables in this phase

# Set these as fleet environment variables that can be overridden by device environment variables in balena.io dashboard.
# Sensible defaults are provided otherwise.
# raspistill supported image width
IMAGE_WIDTH=1920
# raspistill supported image height
IMAGE_HEIGHT=1080
# jpg quality
IMAGE_QUALITY=75
# image/camera rotation
IMAGE_ROTATION=270
# embedded thumbnail width, used in motion detection rather than loading full image to detect motion
THUMB_WIDTH=20
# embedded thumbnail height
THUMB_HEIGHT=16
# raspicam exposure mode: auto, night, nightpreview, backlight, spotlight, sports, snow, beach, verylong, fixedfps, antishake, fireworks
RASPICAM_EXPOSURE_MODE=sports
# reset raspistill every x milliseconds
RASPICAM_RESET_INTERVAL=300000
# RGB percent difference that triggers motion detection e.g. 10.0 (10 percent difference triggers detection)
MOTION_SENSITIVITY=10.0
# Array of hotspot bounding boxes of where in the thumbnail to look for motion to cut down on unnecessary uploads
# percentage from left, percentage from top, percentage width, percentage height
# divider of |
# default is 100% coverage
MOTION_HOTSPOTS=0,0,100,100
# Another example with two hotspots: a centered box and a top-to-bottom box aligned to the right:
# MOTION_HOTSPOTS=25,25,50,50|0,85,15,100
# DB record time to live: number of days when the record will be auto-deleted
DB_RECORD_TTL=30

# Follow AWS IoT Tutorial here to fill in the following AWS variables in balena.io dashboard device settings:
# https://www.balena.io/docs/learn/develop/integrations/aws/

# application endpoint
AWS_ENDPOINT=BASE64CERTGOESHERE
# thing private key encoded in base64
AWS_PRIVATE_CERT=BASE64CERTGOESHERE
# aws root certificate encoded in base64
AWS_ROOT_CERT=BASE64CERTGOESHERE
# thing certificate
AWS_THING_CERT=BASE64CERTGOESHERE
